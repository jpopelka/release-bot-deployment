# MIT License
#
# Copyright (c) 2018-2019 Red Hat, Inc.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

---
  kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: redis-commander
    labels:
      service: redis-commander
  spec:
    selector:
      service: redis-commander
    template:
      metadata:
        labels:
          service: redis-commander
          name: redis-commander
      spec:
        containers:
          - name: redis-commander
            image: rediscommander/redis-commander
            env:
              - name: REDIS_HOST
                value: redis
              - name: REDIS_PORT
                value: "6379"
            ports:
              - containerPort: 8081
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "100m"
    replicas: 1
    strategy:
      type: Recreate
---
  apiVersion: v1
  kind: Service
  metadata:
    name: redis-commander
    labels:
      service: redis-commander
  spec:
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      service: redis-commander
---
  apiVersion: v1
  kind: Route
  metadata:
    name: redis-commander
  spec:
    to:
      kind: Service
      name: redis-commander
